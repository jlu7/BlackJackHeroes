//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;


public enum PlayerState
{
	Attacking,
	Defending,
	Waiting,
}

public class PlayerBrain : MonoBehaviour
{
	HandController myHand;
	CombatZoneController combatZone;

	void Awake()
	{
		myHand = GetComponent<HandController>();
	}

    public void Initialize(CombatZoneController zone)
    {
        combatZone = zone;
    }

    public IEnumerator BeginTurn()
    {
        while (true)
        {
            yield return StartCoroutine(WaitForKeyDown(KeyCode.Space));
            yield return new WaitForEndOfFrame();
        }
    }

    IEnumerator WaitForKeyDown(KeyCode keyCode)
    {
        if (keyCode == KeyCode.Space)
        {
            Hit();
        }
        while (!Input.GetKeyDown(keyCode))
            yield return null;
    }

	PlayerBrain defender;

	public void EnterAttack(PlayerBrain defender)
	{
		this.defender = defender;
		myHand.ActivateCardInput(CardSelected);
	}

	void CardSelected(GameCard card)
	{
		//myHand
		Debug.Log("PlayerBrain Card Selected: " + card.name);
		defender.RecieveAttack(card);
	}

	public void RecieveAttack(GameCard card)
	{
		combatZone.AddAttackCard(card);
	}

	public void EnterDefense()
	{
		combatZone.BeginAttackPhase(this);
	}

    public void Hit()
    {
        Debug.Log("SLDFKJSD");
        StartCoroutine(myHand.DealCardToHand((GameCard gc) =>
                    {
                        myHand.gameCards.Add(gc);
                        gc.transform.parent = myHand.transform;
                    })
        );
    }
}


